# ========= Base =========
FROM python:3.11-slim

ARG APP_HOME=/app
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    LOG_LEVEL=INFO \
    APP_VERSION="docker"

WORKDIR $APP_HOME

# Dependências do sistema (mínimas) e limpeza de cache do apt
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential curl ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# ====== Camada de deps (cache mais eficiente) ======
# Se o projeto usa pyproject.toml (como no seu caso)
COPY pyproject.toml $APP_HOME/pyproject.toml

RUN python -m pip install --upgrade pip && \
    pip install --no-cache-dir -e . && \
    pip install --no-cache-dir "uvicorn[standard]"

# ====== Código da aplicação ======
COPY app $APP_HOME/app

# Usuário não-root
RUN useradd -m appuser && chown -R appuser:appuser $APP_HOME
USER appuser

EXPOSE 8000

# Healthcheck bate no /health (já disponível no seu app)
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD curl -fsS http://127.0.0.1:${PORT:-8000}/health || exit 1

# Exec form; para respeitar $PORT no Render/Heroku etc, uso sh -c
CMD ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port ${PORT:-8000}"]
